*******
Changes
*******

Significant changes to vimfiles (newest changes first).

Changes marked with "BREAKING CHANGE" indicate an incompatible change that may
require adjustment of per-user settings.

2014-11-19
==========

- Add ``EditSnippets`` command (thanks to John Szakmeister).

- During a Git rebase operation, the following mappings are now available
  (thanks to John Szakmeister):

  - <Leader><Leader>e Change rebase action to "edit"
  - <Leader><Leader>f Change rebase action to "fixup"
  - <Leader><Leader>p Change rebase action to "pick"
  - <Leader><Leader>r Change rebase action to "reword"
  - <Leader><Leader>s Change rebase action to "squash"

- Setup 'shellpipe' to keep Vim from hiding failures (thanks to John
  Szakmeister).

- Synchronize python and shell syntax highlighting from start-of-file to avoid
  highlighting errors (thanks to John Szakmeister).

- Highlight diffs in emails (thanks to John Szakmeister).

- Reuse the current window when opening a new file with CtrlP (thanks to John
  Szakmeister).  Try this via CTRL-p CTRL-p (or any other file-based CtrlP
  operation), type a filename that doesn't exist, then press CTRL-y to create
  that file.

- Disable Powerline support for terminals with eight or fewer colors (thanks to
  John Szakmeister).

2014-11-16
==========

- Update "lusty-juggler" plugin to version 2014-11-15 (0e73d8d) which includes
  John Szakmeister's fix.

- Update "lusty-explorer" plugin to version 2014-11-15 (0e73d8d).

- Add "sneak" plugin, bringing new "s{char}{char}" motion and "z{char}{char}"
  operator.  Pressing "s" followed by two consecutive characters in your file to
  move to that location.  See ``:help notes_sneak`` for more details.

- Add "incsearch" plugin.  Now "/" and "?" highlight all matches incrementally
  while typing.  See ``:help notes_incsearch`` for more details.

- Update "surround" plugin to version 2014-07-26.

2014-11-15
==========

- Prevent the highly irritating problem wherein the cursor jumps back to the
  previously saved position when the user scrolls the inactive window with the
  mouse wheel and then clicks in the window.

- Make localvimrc decisions persistent only for uppercase answers (Y/N/A).  This
  way, you can provide a one-time approval for the given .lvimrc.

- Don't run .lvimrc files in a sandbox.  The user must approve the use of any
  given .lvimrc file, and he must re-approve it whenever the contents of the
  .lvimrc file changes; therefore, it's safe to run them outside of the :sandbox
  command.  In particular, this permits using things like :HighlightOff inside a
  .lvimrc.

- Fix bad interaction between the LustyJuggler and endwise plugins (thanks to
  John Szakmeister).

2014-11-13
==========

- Change the Sphinx syntax checker to use HTML output instead of text.  This
  fixes some length slow-downs when saving .rst files that are part of a
  Sphinx-based project.

2014-11-11
==========

- Update CtrlP plugin to version 2014-10-13, switching from the unmaintained
  version from the original author (who seems to have fallen off the grid).

  Set g:ctrlp_switch_buffer empty to prevent CtrlP from jumping to other
  windows.  Now selected buffers will open in the current window, even if the
  buffer is already open in another window.

- Adjust snippets for Makefiles.

- Update endwise plugin to version 2014-10-01.

2014-11-04
==========

- Update signature plugin to 2014-11-03.  This makes marks work like they are
  supposed to work in Vim, which is that setting a mark on a line via ``mx``
  does not toggle the mark.  To delete mark ``x``, use ``dmx``.  This is
  controlled via these two variables in vimrc (they may be overridden in your
  vimrc-after if you'd like signature's toggling-mark behavior back)::

    " Disable toggling of marks and markers.
    let g:SignatureForceMarkPlacement = 1
    let g:SignatureForceMarkerPlacement = 1

2014-11-04
==========

- Make :L, :L2, etc., account for the presence of extra columns in the gutter
  (for line numbers and for diff-mode indicators).

2014-10-26
==========

- Add signature plugin to display Vim :marks.  Now, after setting a mark (such
  as with ``ma``), a Vim "sign" will be shown in the gutter to show the mark's
  location.

- Enable the use of the "colorcolumn" feature.  When 'textwidth' is non-zero,
  a vertical colored line will be displayed one column beyond 'textwidth' to
  help visually track the margin.

- Set szakdark's ColorColumn color to be a muted dark gray.

2014-10-25
==========

- Update bufexplorer plugin to 7.4.5 (the nnoremap patch has been merged).

2014-10-23
==========

- Adjust :L, :L2, etc., to use 82-column window widths by default, to
  accommodate the use of Vim's :signs (which take two extra columns).
  See :help notes for details on configuring the window width.

2014-10-15
==========

- Break undo for insert-mode CTRL-u and CTRL-w; otherwise, an undo will just
  remove all text from the current insert operation instead of bringing back
  the deleted text.

2014-10-14
==========

- Patch BufExplorer to define mappings only for normal mode.  The overly broad
  "noremap" command used previously created undesirable select-mode mappings
  for "\be" and friends.

- Unmap some stray undesirable select-mode mappings that appeared after a
  plugin upgrade.

- Turn off UltiSnips's feature of unmapping select-mode mappings.  It ought to
  :sunmap only mappings that start with a printable character, but it unmaps
  too much (e.g., it removes select-mode <M-z>).

2014-10-13
==========

- Update BufExplorer to version 7.4.4 (no significant changes; updated to
  prepare for future patches).

2014-10-10
==========

- Map <M-u><M-l> to list snippets matching trigger at cursor.  This is useful
  for Console Vim, where the default <C-Tab> mapping doesn't work.

- Map <M-u><Tab> to the UltiSnips "jump forward" action.  <Tab> is overloaded
  to expand a snippet if possible, and to jump forward if no trigger is found.
  When this is not desired, <M-u><Tab> can be used to force the jump action
  instead of expanding the trigger (perhaps after undoing the erroneous snippet
  expansion via <M-u><M-u> or <M-z>).

- Break undo when triggering a snippet, so that if you undo after expanding
  a snippet, only the snippet expansion is undone.

2014-09-18
==========

- Upgrade UltiSnips to version 2014-09-13.

- Improve <M-z> (undo) mapping to stay in the same mode from which is
  was invoked.  Add <M-u><M-u> mapping as an alias, as it's expected
  to be easier to type and remember in some cases.

2014-09-13
==========

- Automatically shorten filenames in QuickFix window.  Commands like :Regrep
  leave absolute paths in the QuickFix results for files not already open in
  Vim.  A new autocmd now invokes ShortenFilenames() to perform Vim's filename
  shortening algorithm (such as converting to a relative path when the result
  is contained within the current working directory).

- Add documentation for colorscheme detection and for configuring ssh to
  propagate the COLORFGBG environment variable to aid background color
  detection accuracy.

2014-09-07
==========

- Provide support for extremely early per-user configuration of variables via
  the new ``VIMRC_VARS`` script file.  Most users won't need this; it comes in
  handy for disabling bundles before the main vimrc activates them all.

- BREAKING CHANGE: To better support the use of bundles in vimrc-before.vim
  scripts, all bundles are activated now before sourcing this script.  In the
  off chance that you were setting g:pathogen_disabled in your vimrc-before.vim
  script, you'll need to move this definition to a vimrc-vars.vim file.

  With this change, all supported colorschemes are available for use directly
  in the vimrc-before.vim script; tricks with pathogen#surround() are no longer
  required.

- Add some new colorschemes:
  - badwolf (dark)
  - base16-* (collection of colorschemes)
  - gruvbox (dark)
  - hemisu (dark)
  - hybrid (dark)
  - monokai (dark)
  - wombat256i (dark)

- Update grep plugin to version 1.11.

2014-09-06
==========

- Disable Startify for Vim versions prior to 7.3.633.  Startify hangs on
  Windows with Vim 7.3.46 on some machines, but works with 7.3.633.  Since I
  can't replicate it with Vim 7.3.46 on another machine, its easier to just
  disable Startify as a work-around.

2014-08-31
==========

- Add "Startify" plugin to show recently used files in custom startup screen,
  with the side benefit of displaying a reminder about ':help notes' and
  ':help localnotes'.

2014-08-28
==========

- Mention that ":help localnotes" provides access to any "local" notes
  (covering vimfiles additions stored in ~/.vim/local/).

2014-08-27
==========

- When Vim can be trusted, vimfiles will now honor its light-background
  detection choice.  Vim can't really detect the background color properly in
  many cases (especially when running in a console).  For example, it loses
  detection accuracy after ssh'ing to another machine and after executing ``su
  -`` or ``sudo -i``.  For this reason, vimfiles used to unconditionally force
  a dark-background colorscheme (unless the user preselects a preferred
  colorscheme using the VIMUSER mechanism).  But in the special case that the
  COLORFGBG environment variable is set accurately, console Vim can correctly
  detect the background color.  Not all terminal emulators set this variable,
  but rxvt and KDE's konsole do (but sadly, xterm does not).  This variable is
  lost when executing ``su -`` or ``sudo -i``, and when ssh'ing to another
  machine (unless the ssh client and server settings are changed to propagate
  the variable to the server).  In the cases where this variable *has* been
  set, vimfiles will now honor it, so rxvt and konsole terminals that use a
  light background will work out-of-the-box, at least until the user loses the
  COLORFGBG definition for some reason (such as the above scenarios).

2014-08-24
==========

- Fix a problem with :Highlight seeming to be turned off by default on older
  Vim versions.  The newly refactored :Highlight command was tested on a recent
  Vim; that version of Vim allowed syntax groups defined in a FileType autocmd
  to survive, such that things worked as expected.  Older versions of Vim do
  not seem to preserve syntax groups defined in the FileType autocmd, so the
  checks turned on by the :Highlight command appeared to be off by default.  As
  a work-around, the :HighlightOn command may be issued manually to re-apply
  the groups after a file has been loaded.

  The change in Vim occurred somewhere between versions 7.4.179 and 7.4.410.

2014-08-08
==========

- Eliminate invalid ``l:`` prefix on a function name.  This was apparently
  always illegal, but Vim used to permit it.

2014-07-30
==========

- BREAKING CHANGE: Rename Foldsearch, Foldcomments, and Toascii to FoldSearch,
  FoldComments, and ToAscii for uniformity with other commands.

- When embedding languages into ``.rst`` files for syntax highlighting, don't
  allow the languages to change 'iskeyword'.  Previously, the ``sh`` language
  was adding a period to 'iskeyword'.

- Improved interface for :Highlight command:

  - New g:HighlightEnabled variable to control the default disposition of
    highlighting.  In vimrc, this is set to 1, but it may be overridden in a
    vimrc-after file.

  - New :HighlightOn and :HighlightOff commands that toggle highlighting for a
    single buffer.

  It's recommended to avoid invoking ":Highlight no*" to disable highlighting,
  as that makes it difficult to restore highlighting of the items configured
  for the filetype; instead, use a combination of g:HighlightEnabled and
  :HighlightOn/:HighlightOff.

- When pressing <CR> in insert mode, trailing whitespace will be removed from
  the previous line.  So, with your cursor on the "X" below:

    Place cursor on X and press Enter

  Pressing Enter will remove the trailing space from "Place cursor on ".  This
  helps avoid leaving trailing whitespace in a file.

  See :help notes for ideas to intentionally preserve whitespace when pressing
  <Enter>.

2014-07-27
==========

- Add "unittest" plugin.

- Add routines for path manipulation in vimrc.

- Add unit tests for vimrc in test/test_vimrc.vim.

- Add RtpInherit() to allow inheriting from another user's configuration.

2014-07-26
==========

- Update fixkey to version 0.3.5 (supports TERM=screen-it and similar).

2014-07-22
==========

- Cause cpp snippets to inherit c snippet (thanks to John Szakmeister).

2014-07-13
==========

- Upgrade fugitive to version 2014-07-07.  Incorporates a fix to ensure fugitive
  disables diff-mode only when it caused diff-mode in the first place.

2014-06-26
==========

- Upgrade fixkey to version 0.3.4.  This includes a changed default for
  'ttimeoutlen' (which won't impact much, as 5 ms is already set
  in vimrc), and documentation of an inherent problem using Vim macros
  to play back ambiguous keycodes.

2014-06-23
==========

- Upgrade textobj-user to version 0.6.3 and textobj-function to version 0.4.0.
  This fixes problems with newer versions of Vim.  John Szakmeister worked with
  the maintainer of these plugins to get the needed corrections in-place.

2014-06-21
==========

- Upgrade to UltiSnips 3.0 (thanks to John Szakmeister).  The "sample" snippets
  that used to ship with UltiSnips were removed in UltiSnips 3.0 and repackaged
  with the "vim-snippets" project.  In addition, the "clearsnippets"
  functionality in UltiSnips 3.0 is no longer very useful, since snippet
  priority based on runtimepath ordering is no longer a feature.  Therefore,
  these sample snippets have been imported for reference into
  vimfiles/optional-bundle/snippets, with instructions at :help notes_snippets
  for activating them.

2014-05-17
==========

- Upgrade fixkey plugin to 0.3.3 (fixes PuTTY SCO keymap for F1 through F12 for
  console Vim).

2014-04-05
==========

- Upgrade fontsize plugin to 0.3.3 (adds support for [count]).

2014-03-28
==========

- Add John Szakmeister's work-around to define UltiSnips_FileTypeChanged
  when UltiSnips is disabled.

- Upgraded togglecursor to 0.2.0.

2014-03-15
==========

- Change ttimeoutlen to 5 ms to avoid Console vim errors when pressing <Esc>
  followed too closely by a letter (which look too much like the terminal's
  encoding for Alt+letter).

2014-03-04
==========

- Add support for Lua and Moonscript languages.

2014-02-23
==========

- Update rst2ctags to v0.1.2 and markdown2ctags to v0.1.1.  This fixes some
  issues with having backslash characters in headings (thanks for John
  Szakmeister for these updates).

- Add g:EnableUltiSnips to allow UltiSnips to be disabled.  This helps with
  NeoVim, a Vim fork that doesn't support Python bindings yet.

2014-02-18
==========

- Fail gracefully when setting the 'j' flag in 'formatoptions' on Vim older
  than 7.3.541 (when this flag was first introduced).

2014-02-17
==========

- Consolidate 'formatoptions' settings for filetypes into shared setup
  functions.  SetupCommon(), SetupText(), and SetupSource() now collaborate to
  provide textfile-like and sourcecode-like format settings that should be
  usable unchanged across most types of files.

  In addition, the flag 'n' is now included in all filetypes, so that the
  reformatting operator "gq" (also mapped to Alt-Q) now properly preserves
  bulleted and numbered items.  For example, this text::

    Some text
    - with a
      bulleted
      item
    - and another
      one

  Will reformat (using Alt-Q) to the following text::

    Some text
    - with a bulleted item
    - and another one

- Extend 'formatlistpat' to view a header's underline as it would a list item.
  This hack prevents Vim from reformatting underlined headers.  So, for
  example, pressing Alt-Q when on the below text leaves it unchanged::

    An underlined header
    ====================

  Unfortunately, it doesn't work for over/under headers.  This text::

    =================
    Over/under header
    =================

  will be reformatted badly to this::

    ================= Over/under header
    =================

  But since underlined headers are the most common, this is better
  than nothing, and it's much easier to use Vim's built-in formatting
  logic than to write something custom.


2013-12-13
==========

- Augment Python Path with all "pylib" directories in Vim runtimepath.  Migrate
  "sniputil" to ~/.vim/pypath.  See "Python Path" section in notes.txt for more
  details.

- Incorporate more uses of John Szakmeister's "betterVisual()" support for
  UltiSnips snippets.

2013-12-12
==========

- Start at the top of the buffer when doing a ``git rebase -i``

2013-12-10
==========

- Moved fswitch to a bundle and updated to 0.9.5.

2013-12-05
==========

- Add John Szakmeister's markdown2ctags tool to support Markdown files in
  tagbar.

2013-12-01
==========

- Default to Python version 2 syntax highlighting with the newly upgraded
  Python syntax file.  This is done by setting g:python_2_syntax to 1.  It may
  be overridden using b:python_2_syntax on a per-buffer basis, or globally by
  setting g:python_2_syntax from "vimrc_before.vim" or "vimrc_after.vim".

  Also, :Python2Syntax and :Python3Syntax allow switching dynamically between
  the two syntax highlighting schemes.

2013-11-24
==========

- Add :VisualHelp to perform :help on the visual selection.  In visual mode,
  this may be invoked via <F1>, <C-Q>h, or <C-Q><C-H>.

2013-11-23
==========

- Add "Characterize" plugin.  Now typing ``ga`` shows more information about
  the character under the cursor.

- Update the "szakdark" colorscheme:

  - Provide better Error highlighting.
  - Ensure that the background is cleared for pythonDot.
  - Tone down the indent guides so they're less distracting.
  - Make the git commit summary line standout a little more.

- Add :OneWindow command to avoid "Already only one window"
  error messages.  Map <C-W><C-O> and <C-W>o to use it.

- :DiffOrig now closes other windows before starting diff.

- Add :DiffClose to close all diff windows except current window.
  Perform this as first step of :OneWindow.

- Add :Diff command to initiate a diff between current window and
  the "next" window or a file given as an argument.

2013-11-21
==========

- Add support for "##" comments in makefiles.

2013-11-13
==========

- Update vim-eunuch to version 2013-03-02.

- Convert from use of glob(expr, nosuf, list) to older glob(expr, nosuf) for
  compatibility with older Vim.  Apparently the third argument to glob() was
  added in Vim 7.3.465.

2013-11-11
==========

- Convert from Blacklisting of font families that don't support Unicode Symbols
  properly to having a whitelist of known-good font families, since Powerline
  looks very bad when using Powerlines_symbols == "unicode" with a font family
  that doesn't support the symbols.  The variable
  g:GoodUnicodeSymbolFontFamilyPatterns may now be set from a ``VIMRC_BEFORE``
  script to extend the list of font families that have known-good support for
  Unicode Powerline symbols.  See vimrc for more details.

- Add a way to detect changes in Powerline settings and automatically delete
  stale cached ``Powerline*.cache`` files as Vim starts.

  As a result, these cache files now live below the ``$VIM_CACHE_DIR``
  directory (typically ``~/.cache/vim`` on Unix).  For tidiness, you may
  want to delete any old Powerline cache files in your vimfiles directory.
  For example, on Unix::

    find ~/.vim -name 'Powerline*.cache' -delete

  In addition, if you make adjustments to Powerline settings in your per-user
  ``VIMRC_BEFORE``, set ``g:PowerlineRequiredCacheTag`` to a unique value every
  time you make a change to the format.  For example::

    let g:PowerlineRequiredCacheTag = "2013-11-11"

- Cleaned up references to ``VIMRC_BEFORE`` and ``VIMRC_AFTER``.

- Add Powerline segment to detect trailing whitespace.

2013-11-09
==========

- Update Python syntax highlighting support to version 3.3.5.

- Update ColorSamplerPack to version 2012-10-28.

- Unlink the syntax group pythonDot from Normal; this keeps :hardcopy output
  from having a dark background for dot characters in Python.

- Blacklist Consolas from using g:Powerline_symbols == "unicode", as that font
  doesn't properly support the needed Unicode symbols.

- Enable fontdetect and colorsamplerpack bundles early for use in
  ``VIMRC_BEFORE`` scripts.

- Allow g:DefaultFontFamilies to be set from ``VIMRC_BEFORE`` scripts.

- Update swapit plugin to version 0.3.2.

- Update BufExplorer plugin to version 7.4.2.

- Update ManPageView plugin to version 25l.  Patch "sleep 2" calls to be
  "sleep 250m" to drop the irritating 2-second delay when K is pressed
  accidentally and no manpage exists under cursor.  Changed
  g:manpageview_winopen back to the default "hsplit"; the value "reuse" is
  painful when pressing "K" for a non-existent manpage, since ManPageView
  will forcibly close the original window after displaying the error.

2013-11-05
==========

- Installed Dr. Chip's HiLinkTrace plugin to display the syntax highlighting
  stack.  Use HLT! to toggle display of the syntax stack.  See :help
  notes_hilinktrace for details.

2013-11-03
==========

- Restored :Highlight functionality.  Highlight groups that are cleared via
  ``:highlight clear`` are not removed, but are changed to have the inactive
  value ``xxx cleared``, causing hlexists() to unhelpfully return true.
  Now a new function, HighlightGroupExists(), works around this behavior.

  See :help notes for details on disabling the :Highlight feature.

2013-10-30
==========

- Added the vim-session and vim-misc plugins.  The vim-session plugin provides
  some nice session management features.  Use ``:SaveSession`` to save a
  session, ``:OpenSession`` to load a saved session, and ``:CloseSession`` to
  close the current session.  See ``:help notes_session`` for more information
  about how vim-session is configured, or ``:help session.txt`` to see
  vim-session's documentation

2013-10-29
==========

- Restore customized settings for the fswitch plugin which were accidentally
  lost when adding the ability to override them with .lvimrc files.
  The fswitch plugin provides the \of ("Other File") functionality (see :help
  notes for details).

2013-10-27
==========

- Perform ``:diffupdate`` on <C-L> as part of screen refreshing.

- Define ``SetupMakeIndent`` to override some indent-related settings for
  makefiles.

- Define first-cut experimental snippets for Makefiles.

  Makefiles.  Now 'autoindent' is enabled and the colon key won't force a
  re-indentation.

- Update fugitive plugin to version 2013-10-24 (34e2d253).

2013-10-03
==========

- Upgrade to headerguard 0.2.0; migrate it to bundle-based installation.
  Version 0.2.0 provide buffer-local override capabilities for inserting
  header guards.

- BREAKING CHANGE: Upgrade to fontsize 0.3.0, migrating to bundle-based
  installation.  The default keystrokes have changed to <Leader><Leader>x
  instead of <Leader>xx.  See :help fontsize-customization for configuring
  non-default mappings.

2013-09-15
==========

- Add fontdetect plugin, fixing broken font fallback logic.

2013-09-08
==========

- Add CHANGES.txt to document significant changes.

- Move all interesting documentation into doc/notes.txt, leaving README.txt
  as a pointer into the notes.

.. vim:set ft=rst:
