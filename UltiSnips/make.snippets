
priority -5
# DO NOT EDIT - file generated by corresponding .py file
snippet c "$(call " w
$(call $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet call "$(call " w
$(call $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet s "$(call S." w
$(call S.$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet v "$(" w
$($0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet fi "$(filter " w
$(filter $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet fo "$(filter-out " w
$(filter-out $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet def "define ...endef" b
define $0
endef
endsnippet

global !p
def makeParamComments(nameAndArgs):
    numArgs = len(nameAndArgs.split(",")) - 1

    s = ""
    for i in range(numArgs):
        s += "\n#   $%d - " % (i + 1)

    return s
endglobal
# DO NOT EDIT - file generated by corresponding .py file
snippet func "$(call S.func,funcName,...)... $(call S.endFunc)" b
$(call S.func,$1)
# $2`!p snip.rv = makeParamComments(t[1])`
define ${1/,.*//}
  $0
endef
$(call S.endFunc)
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet if "$(if " w
$(if $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ie "ifeq '$1' $'2' ... endif" w
ifeq '$1' '$2'
  $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ifeq "ifeq '$1' $'2' ... endif" w
ifeq '$1' '$2'
  $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet eie "else ifeq '$1' $'2'" w
else ifeq '$1' '$2'
  $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ine "ifneq '$1' $'2' ... endif" w
ifneq '$1' '$2'
  $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ifneq "ifneq '$1' $'2' ... endif" w
ifneq '$1' '$2'
  $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet eine "else ifenq '$1' $'2'" w
else ifneq '$1' '$2'
  $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet i "_if ... endif" w
_if $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ei "else _if" w
else _if $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet in "_ifNot ... endif" w
_ifNot $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ein "else _ifNot" w
else _ifNot $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ib "_ifBool ... endif" w
_ifBool $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet eib "else _ifBool" w
else _ifBool $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet inb "_ifNotBool ... endif" w
_ifNotBool $0
endif
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet einb "else _ifNotBool" w
else _ifNotBool $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet t "$(true)" w
$(true)
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet f "$(false)" w
$(false)
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet e "$(empty)" w
$(empty)
endsnippet
