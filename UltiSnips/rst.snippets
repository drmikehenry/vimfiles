
priority -5

global !p
from sniputil import betterVisual
endglobal
# DO NOT EDIT - file generated by corresponding .py file
snippet part "Part title" bm
`!p snip.rv = len(t[1]) * '#'`
${1:Part title}
`!p snip.rv = len(t[1]) * '#'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet chap "Chapter title" bm
`!p snip.rv = len(t[1]) * '*'`
${1:Chapter title}
`!p snip.rv = len(t[1]) * '*'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet sect "Section" bm
${1:Section}
`!p snip.rv = len(t[1]) * '='`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet h1 "Section" bm
${1:Section}
`!p snip.rv = len(t[1]) * '='`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet subsec "Subsection" bm
${1:Subsection}
`!p snip.rv = len(t[1]) * '-'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet h2 "Subsection" bm
${1:Subsection}
`!p snip.rv = len(t[1]) * '-'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet subsubsec "Sub-subsection" bm
${1:Sub-subsection}
`!p snip.rv = len(t[1]) * '^'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet h3 "Sub-subsection" bm
${1:Sub-subsection}
`!p snip.rv = len(t[1]) * '^'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet para "Paragraph" bm
${1:Paragraph}
`!p snip.rv = len(t[1]) * '"'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet h4 "Paragraph" bm
${1:Paragraph}
`!p snip.rv = len(t[1]) * '"'`

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet centered "centered:: ..." bm
.. centered:: ${1:line of text}

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet code "code block" bm
.. code-block:: ${1:python}

    $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet l "reference label" b
.. _${1:label}:
$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet warn "Warning Admonition" bm
.. warning::

    $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet note "Note Admonition" bm
.. note::

    $0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet f "File markup" w
:file:\`${1:`!p betterVisual(snip)`}\`$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet r "Ref markup" w
:ref:\`${1:label}\`$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet cmd "Command markup" w
:command:\`${1:`!p betterVisual(snip)`}\`$0
endsnippet
