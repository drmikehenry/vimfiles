#!/usr/bin/env python
# vim:set fileencoding=utf8:

import sys
import re

def put(s):
    sys.stdout.write(s)

def bodyToDesc(body):
    desc = body
    desc = re.sub('"', "'", desc)
    desc = re.sub("\n", r"\\n", desc)
    desc = re.sub(r"\$0", "", desc)
    desc = re.sub(r"\$\{\d+\}|\$\d+", "...", desc)
    desc = re.sub(r"\$\{\d+:([^}]+)\}", lambda m: m.group(1), desc)
    return desc

def snip(trigger, desc, body, flags="", aliases=[], trimBody=True):
    if trimBody and body.startswith("\n"):
        body = body[1:]
    if trimBody and body.endswith("\n"):
        body = body[:-1]
    for t in [trigger] + aliases:
        put("# DO NOT EDIT - file generated by corresponding .py file\n")
        put("""snippet %s "%s" %s\n%s\nendsnippet\n""" % (
            t, re.sub('"', '\\"', desc), flags, body))

def bsnip(trigger, desc, body, flags="", aliases=[], trimBody=True):
    """Beginning-of-line only."""
    snip(trigger, desc, body, flags="b" + flags.replace("b", ""),
            aliases=aliases, trimBody=trimBody)

def wsnip(trigger, desc, body, flags="", aliases=[], trimBody=True):
    """Word boundary."""
    snip(trigger, desc, body, flags="w" + flags.replace("w", ""),
            aliases=aliases, trimBody=trimBody)

def abbr(trigger, value, flags="", aliases=[]):
    desc = bodyToDesc(value)
    snip(trigger, desc, value, flags=flags, aliases=aliases)

def babbr(trigger, value, flags="", aliases=[]):
    """Beginning-of-line only."""
    abbr(trigger, value, flags="b" + flags.replace("b", ""), aliases=aliases)

def wabbr(trigger, value, flags="", aliases=[]):
    """Word boundary."""
    abbr(trigger, value, flags="w" + flags.replace("w", ""), aliases=aliases)

